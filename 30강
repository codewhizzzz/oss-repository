#reset과 undo은 비슷한 기능
-지정한 특정 커밋을 취소해 바로 이전 상태로 되돌리는 방법
-reset과 다르게 커밋할 것이 없고, 작업 영역이 깨끗해야 수행 가능
  커밋해온 모든 변경 사항들을 rollback
  이전의 커밋 히스토리는 그대로 유지, 되돌리는 새로운 커밋이 그 이후에 추가
#인자가 HEAD~와 같이 HEAD 이전을 취소하면 충돌이 발생할 수 있음
-충돌이 발생하지 않으려면 바로 이전 취소를 여러번 계속해야한다.
마치 워드 프로세서에서 취소[ctrl + z]를 여러번 하는 것과 비슷

#옵션 --no-edit
-추가되는 커밋 메시지가 자동으로 Revert'이전 커밋 메시지'으로 지정
$ git revert HEAD~ : 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 복사하고 커밋 메시지를 수정하도록 편집기가 실행됨
$ git revert HEAD~ --no-edit : 옵션 --no-edit으로 편집기 실행 없지 커밋 메시지가 자동으로 'Revert"dlwjszjalt aptlwl"으로 지정되어 새로운 커밋 생성

#커밋할 것이 있고 작업 영억이 깨끗하지 않으면 오류
#해결 방법
-커밋을 하고 다시 revert 하는 방법
현재 커밋 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 수정,복사
 => 수정한 내용이 사라짐
$git reset --hard HEAD~
-이전 커밋 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 수정, 복사
 => 수정한 내용이 사라지고
 => 현재 커밋 로그도 삭제


 revert :지정한 이전 커밋을 취소하는 커밋이 생성, 이전 모든 이력은 그대로 남음
 reset : 지정된 이전 커밋으로 이동
