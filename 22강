병합(merge): 두개를 하나로 모으는 과정
1. fast - forword병합
#병합 조건
-간단히 두 브랜치가 일렬 상태
-bugfix 브랜치 이력이 master 브랜치 이력을 모두 포함하는 경우
#병합 명령
$ git merge bugfix
#master 브랜치는 단순히 이동
-이때는 합칠 내용이 없음
간단히 가리키는 지점에 대상 커밋이 되고 master가  bugfix로 이동
-> 작업공간과 스테이징 영역이 이동되는 Y 상태로 됨
2. 3-way 병합
두 브랜치의 조상이 같은 경우
-master 브랜치 내의 변경 내용과 bugfix 브랜치 내의 변경 내용을 하나로 통합할 경우
#3-way 병합
-새로운 커밋을 사용하여 두 기록을 합침
#새로운 커밋 E 생성
- 두 브랜치의면경을 가져온 'merge commit(병합 커밋)' E를 생성
병합 완료 후, 통합 브랜치인  'master' 브랜치로 통합된 이력이 생성
-m 없으면 메시지 입력할 기본 편집기 실행
=> 'merge branch bugfix'이 기본 메시지 내용
#일렬 상태에서 2가지 병합
1. 일렬 상태
2. 
#옵션이 없는 경우
  -fast - forword병합
    $git meerge topic
#옵션 --no-ff
  -3-way 병합
    $git merge dev1 --no-ff
#non fast- forword 병합
$git mergo -- no -ff{병합할 브랜치 명}
-병합 실행 시에'fast - forward 병합'이 가능한 경우라도 3-way 병합을 수행
병합된 브랜치가 그대로 남기 때문에
=>장점 : 실행한 작업 확임 및 브랜치 관리 면에서 더 유용
#옵션 --squash
-강압적인(?) 병합
$ git merge -- squash hotfix
-사전적 의미 (짓 뭉개다)에서 알 수 있듯이
커밋 이력과 병합되는 브랜치 이력도 남기지 않음
새로운 커밋에 상대 브랜치의 내용을 모두 합해 새로운 커밋으로 병합
=> 직접 메시지와 합께 커밋을 해야 함
