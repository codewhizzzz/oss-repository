#기능 reset 이해
-커밋 이력에서 이전 특정 커밋으로 완전히 되돌아가는 (roll back)방법
-이동되는 해당 커밋 이후의 이력은 모두 사라지므로 주의가 필요
=>새로운 커밋이 생성되지 않음
-깃 저장소는 이전 커밋 내용으로 수정
-------> A -------> B --------> C -----> D:head
$git reset --hard HEAD~2
                      |
-------> A -------> B:HEAD --------> C -----> D

작업 디렉토리 --> 스테이징 영역 --> 깃 저장소
             add            commit
작업 디렉토리 <-- 스테이징 영역 <-- 깃 저장소
            $git diff         $git diff - staged HEAD
              <-------------------
                 $ git diff HEAD
#reset의 3가지 옵션(무조건 깃 저장소에는 복사)
1. --hard : 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 복사
-reset 전에 있던 작업 폴더와 스테이지 영역에 작업 내용이 모두 사라지므로 주의가 필요
2. --mixed : 이동회는 커밋의 내용으로 스테이지 영역과 깃 저장소 두 부분에 복사, 작업 폴도는 이전 내용 그대로 남음
  -reset 전에 있던 작업 폴더와 스테이지 영역에 작업 내용이 모두 사라지므로 주의가 필요
  - 다만 작업 폴더의 내용은 이전 그대로 남음
--mixed는 기본 옵션으로 git reset과 동일
  -옵션 --mixed는 옵션이 없는 것과 같음
3. --soft : 이동되는 커밋의 내용을 깃 저장소에만 복사, 스테이지 영역과 작업 폴더는 이전 내용 그대로 남음
-커밋 메시지 Alphanumeric의 로그 이력은 사라짐
작업 폴더와 스테이지 영역의 내용의 모두 이전 그대로 남음

#커밋 되돌리기
--soft
  -돌아가려 했던 이력으로 되돌아 갔지만
  -해당 내용의 인텍스(또는 스테이지)도 이전 그대로
    =>다시 마지막 이전 head로 돌아갈려면 commit만 필요
--mixed
  -역시 이력은 되돌려지고, 인텍스도 되돌아가는 커밋의 내용으로 초기화
  -다시 마지막 이전 head로 돌아갈려면
     =>add, commit이 필요
--hard
  -돌아갈려는 이력 이후의 모든 내용을 삭제
  -다시 마지막 이전 head로 돌아가려면
    =>파일 수정, add, commit 필요


    #'ORIG _HEAD' 이용하면 매우 간단
    -바로 이전 커밋 참조
      $git reset --hard ORIG_HEAD



  $git reset 9033
    브랜치의 마지막 커밋을 수정하는 명령
  $git checkout 9033
    HEAD 포인터를 브랜치 마지막 커밋 이전으로 이동하는 명
      
